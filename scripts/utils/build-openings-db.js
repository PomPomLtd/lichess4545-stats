/**
 * Build Opening Database from Lichess TSV Files
 *
 * Parses Lichess chess-openings TSV files and creates a JavaScript module
 * with an efficient opening name lookup by move sequence.
 */

const fs = require('fs');
const path = require('path');

// Read and parse all TSV files
const tsvFiles = ['a', 'b', 'c', 'd', 'e'].map(letter =>
  path.join(__dirname, `openings-${letter}.tsv`)
);

const openings = [];

tsvFiles.forEach(file => {
  const content = fs.readFileSync(file, 'utf-8');
  const lines = content.split('\n');

  // Skip header line
  for (let i = 1; i < lines.length; i++) {
    const line = lines[i].trim();
    if (!line) continue;

    const parts = line.split('\t');
    if (parts.length >= 3) {
      const eco = parts[0];
      const name = parts[1];
      const pgn = parts[2];

      // Convert PGN to move sequence (remove move numbers)
      // "1. e4 e5 2. Nf3" -> "e4 e5 Nf3"
      const moveSequence = pgn
        .replace(/\d+\./g, '') // Remove move numbers
        .replace(/\s+/g, ' ')  // Normalize whitespace
        .trim();

      openings.push({ eco, name, moveSequence });
    }
  }
});

// Sort by move sequence length (longest first) for better matching
openings.sort((a, b) => {
  const aLen = a.moveSequence.split(' ').length;
  const bLen = b.moveSequence.split(' ').length;
  return bLen - aLen;
});

console.log(`Loaded ${openings.length} openings from Lichess database`);

// Create the opening database module
const moduleContent = `/**
 * Chess Opening Names Database
 *
 * Data from Lichess chess-openings repository (CC0 Public Domain)
 * https://github.com/lichess-org/chess-openings
 *
 * Auto-generated by build-openings-db.js
 */

const OPENINGS = ${JSON.stringify(openings, null, 2)};

/**
 * Find opening name by move sequence
 * @param {string} moveSequence - Space-separated moves in SAN (e.g., "e4 e5 Nf3")
 * @returns {Object|null} - Opening object with eco, name, and moveSequence, or null if not found
 */
function getOpeningName(moveSequence) {
  // Try exact match first
  const exactMatch = OPENINGS.find(o => o.moveSequence === moveSequence);
  if (exactMatch) return exactMatch;

  // Try matching progressively shorter sequences
  const moves = moveSequence.split(' ');
  for (let i = moves.length - 1; i >= 1; i--) {
    const partial = moves.slice(0, i).join(' ');
    const match = OPENINGS.find(o => o.moveSequence === partial);
    if (match) return match;
  }

  return null;
}

module.exports = {
  getOpeningName,
  OPENINGS
};
`;

fs.writeFileSync(
  path.join(__dirname, 'chess-openings.js'),
  moduleContent,
  'utf-8'
);

console.log('Generated chess-openings.js module');
